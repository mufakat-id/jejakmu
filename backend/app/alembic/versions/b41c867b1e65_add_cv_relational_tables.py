"""add_cv_relational_tables

Revision ID: b41c867b1e65
Revises: f6de1397518c
Create Date: 2025-10-19 10:16:29.529512

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'b41c867b1e65'
down_revision = 'f6de1397518c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_cv',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('professional_summary', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('linkedin_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('github_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('portfolio_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_cv_user_id'), 'user_cv', ['user_id'], unique=True)
    op.create_table('cv_certification',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('issuer', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('issue_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('expiration_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('credential_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('credential_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_certification_user_cv_id'), 'cv_certification', ['user_cv_id'], unique=False)
    op.create_table('cv_education',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('institution', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('degree', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('field_of_study', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('gpa', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_education_user_cv_id'), 'cv_education', ['user_cv_id'], unique=False)
    op.create_table('cv_file',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('reviewed_by_id', sa.Uuid(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_file_user_cv_id'), 'cv_file', ['user_cv_id'], unique=False)
    op.create_table('cv_language',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('proficiency', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('certification_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('certification_score', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_language_user_cv_id'), 'cv_language', ['user_cv_id'], unique=False)
    op.create_table('cv_project',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=False),
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('project_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('repository_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('technologies', sa.JSON(), nullable=True),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_project_user_cv_id'), 'cv_project', ['user_cv_id'], unique=False)
    op.create_table('cv_skill',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_skill_user_cv_id'), 'cv_skill', ['user_cv_id'], unique=False)
    op.create_table('cv_work_experience',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_cv_id', sa.Uuid(), nullable=False),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('employment_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_remote', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_cv_id'], ['user_cv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_work_experience_user_cv_id'), 'cv_work_experience', ['user_cv_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_cv_work_experience_user_cv_id'), table_name='cv_work_experience')
    op.drop_table('cv_work_experience')
    op.drop_index(op.f('ix_cv_skill_user_cv_id'), table_name='cv_skill')
    op.drop_table('cv_skill')
    op.drop_index(op.f('ix_cv_project_user_cv_id'), table_name='cv_project')
    op.drop_table('cv_project')
    op.drop_index(op.f('ix_cv_language_user_cv_id'), table_name='cv_language')
    op.drop_table('cv_language')
    op.drop_index(op.f('ix_cv_file_user_cv_id'), table_name='cv_file')
    op.drop_table('cv_file')
    op.drop_index(op.f('ix_cv_education_user_cv_id'), table_name='cv_education')
    op.drop_table('cv_education')
    op.drop_index(op.f('ix_cv_certification_user_cv_id'), table_name='cv_certification')
    op.drop_table('cv_certification')
    op.drop_index(op.f('ix_user_cv_user_id'), table_name='user_cv')
    op.drop_table('user_cv')
    # ### end Alembic commands ###
