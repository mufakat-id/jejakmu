// This file is auto-generated by @hey-api/openapi-ts

export const BaseResponse_list_str__Schema = {
    properties: {
        code: {
            type: 'integer',
            title: 'Code',
            description: 'HTTP status code (200, 201, 400, 404, etc.)',
            examples: [200, 201, 400, 404, 500]
        },
        message: {
            type: 'string',
            title: 'Message',
            description: 'Human-readable message describing the operation result',
            examples: ['Operation successful', 'Resource created successfully', 'Resource not found']
        },
        data: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Data',
            description: 'The actual response data. Type varies by endpoint. Can be null for update/delete operations.'
        }
    },
    type: 'object',
    required: ['code', 'message'],
    title: 'BaseResponse[list[str]]'
} as const;

export const Body_v1_login_access_tokenSchema = {
    properties: {
        grant_type: {
            anyOf: [
                {
                    type: 'string',
                    pattern: 'password'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Grant Type'
        },
        username: {
            type: 'string',
            title: 'Username'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        scope: {
            type: 'string',
            title: 'Scope',
            default: ''
        },
        client_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Id'
        },
        client_secret: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Secret'
        }
    },
    type: 'object',
    required: ['username', 'password'],
    title: 'Body_v1-login_access_token'
} as const;

export const Body_v1_upload_cv_fileSchema = {
    properties: {
        file: {
            type: 'string',
            format: 'binary',
            title: 'File',
            description: 'CV file (PDF, DOC, DOCX)'
        }
    },
    type: 'object',
    required: ['file'],
    title: 'Body_v1-upload_cv_file'
} as const;

export const Body_v1_upload_filesSchema = {
    properties: {
        files: {
            items: {
                type: 'string',
                format: 'binary'
            },
            type: 'array',
            title: 'Files',
            description: 'Multiple files to upload'
        }
    },
    type: 'object',
    required: ['files'],
    title: 'Body_v1-upload_files'
} as const;

export const Body_v1_upload_files_to_b2Schema = {
    properties: {
        files: {
            items: {
                type: 'string',
                format: 'binary'
            },
            type: 'array',
            title: 'Files',
            description: 'Multiple files to upload'
        }
    },
    type: 'object',
    required: ['files'],
    title: 'Body_v1-upload_files_to_b2'
} as const;

export const CVCertificationCreateSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 255,
            title: 'Name'
        },
        issuer: {
            type: 'string',
            maxLength: 255,
            title: 'Issuer'
        },
        issue_date: {
            type: 'string',
            maxLength: 7,
            title: 'Issue Date'
        },
        expiration_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Expiration Date'
        },
        credential_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Credential Id'
        },
        credential_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Credential Url'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['name', 'issuer', 'issue_date', 'user_cv_id'],
    title: 'CVCertificationCreate'
} as const;

export const CVCertificationPublicSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 255,
            title: 'Name'
        },
        issuer: {
            type: 'string',
            maxLength: 255,
            title: 'Issuer'
        },
        issue_date: {
            type: 'string',
            maxLength: 7,
            title: 'Issue Date'
        },
        expiration_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Expiration Date'
        },
        credential_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Credential Id'
        },
        credential_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Credential Url'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['name', 'issuer', 'issue_date', 'id', 'user_cv_id'],
    title: 'CVCertificationPublic'
} as const;

export const CVCertificationUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        issuer: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Issuer'
        },
        issue_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Issue Date'
        },
        expiration_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Expiration Date'
        },
        credential_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Credential Id'
        },
        credential_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Credential Url'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        display_order: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Display Order'
        }
    },
    type: 'object',
    title: 'CVCertificationUpdate'
} as const;

export const CVEducationCreateSchema = {
    properties: {
        institution: {
            type: 'string',
            maxLength: 255,
            title: 'Institution'
        },
        degree: {
            type: 'string',
            maxLength: 100,
            title: 'Degree'
        },
        field_of_study: {
            type: 'string',
            maxLength: 255,
            title: 'Field Of Study'
        },
        start_date: {
            type: 'string',
            maxLength: 7,
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 7
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        gpa: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Gpa'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['institution', 'degree', 'field_of_study', 'start_date', 'user_cv_id'],
    title: 'CVEducationCreate'
} as const;

export const CVEducationPublicSchema = {
    properties: {
        institution: {
            type: 'string',
            maxLength: 255,
            title: 'Institution'
        },
        degree: {
            type: 'string',
            maxLength: 100,
            title: 'Degree'
        },
        field_of_study: {
            type: 'string',
            maxLength: 255,
            title: 'Field Of Study'
        },
        start_date: {
            type: 'string',
            maxLength: 7,
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 7
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        gpa: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Gpa'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['institution', 'degree', 'field_of_study', 'start_date', 'id', 'user_cv_id'],
    title: 'CVEducationPublic'
} as const;

export const CVEducationUpdateSchema = {
    properties: {
        institution: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Institution'
        },
        degree: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Degree'
        },
        field_of_study: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Field Of Study'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        gpa: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Gpa'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        display_order: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Display Order'
        }
    },
    type: 'object',
    title: 'CVEducationUpdate'
} as const;

export const CVFilePublicSchema = {
    properties: {
        file_url: {
            type: 'string',
            maxLength: 500,
            title: 'File Url'
        },
        file_name: {
            type: 'string',
            maxLength: 255,
            title: 'File Name'
        },
        file_type: {
            type: 'string',
            maxLength: 50,
            title: 'File Type'
        },
        file_size: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'File Size'
        },
        status: {
            type: 'string',
            maxLength: 50,
            title: 'Status',
            default: 'submitted'
        },
        review_notes: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 1000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Review Notes'
        },
        is_primary: {
            type: 'boolean',
            title: 'Is Primary',
            default: false
        },
        version: {
            type: 'integer',
            title: 'Version',
            default: 1
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        },
        reviewed_by_id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Reviewed By Id'
        },
        reviewed_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Reviewed At'
        }
    },
    type: 'object',
    required: ['file_url', 'file_name', 'file_type', 'id', 'user_cv_id'],
    title: 'CVFilePublic'
} as const;

export const CVFileUpdateSchema = {
    properties: {
        status: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Status'
        },
        review_notes: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Review Notes'
        },
        is_primary: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Primary'
        },
        reviewed_by_id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Reviewed By Id'
        }
    },
    type: 'object',
    title: 'CVFileUpdate'
} as const;

export const CVFileWithCVPublicSchema = {
    properties: {
        file_url: {
            type: 'string',
            maxLength: 500,
            title: 'File Url'
        },
        file_name: {
            type: 'string',
            maxLength: 255,
            title: 'File Name'
        },
        file_type: {
            type: 'string',
            maxLength: 50,
            title: 'File Type'
        },
        file_size: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'File Size'
        },
        status: {
            type: 'string',
            maxLength: 50,
            title: 'Status',
            default: 'submitted'
        },
        review_notes: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 1000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Review Notes'
        },
        is_primary: {
            type: 'boolean',
            title: 'Is Primary',
            default: false
        },
        version: {
            type: 'integer',
            title: 'Version',
            default: 1
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        },
        reviewed_by_id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Reviewed By Id'
        },
        reviewed_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Reviewed At'
        },
        user_cv: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/UserCVPublic'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['file_url', 'file_name', 'file_type', 'id', 'user_cv_id'],
    title: 'CVFileWithCVPublic'
} as const;

export const CVFilesPublicSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/CVFileWithCVPublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'CVFilesPublic'
} as const;

export const CVLanguageCreateSchema = {
    properties: {
        language: {
            type: 'string',
            maxLength: 100,
            title: 'Language'
        },
        proficiency: {
            type: 'string',
            maxLength: 50,
            title: 'Proficiency'
        },
        certification_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Certification Name'
        },
        certification_score: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Certification Score'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['language', 'proficiency', 'user_cv_id'],
    title: 'CVLanguageCreate'
} as const;

export const CVLanguagePublicSchema = {
    properties: {
        language: {
            type: 'string',
            maxLength: 100,
            title: 'Language'
        },
        proficiency: {
            type: 'string',
            maxLength: 50,
            title: 'Proficiency'
        },
        certification_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Certification Name'
        },
        certification_score: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Certification Score'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['language', 'proficiency', 'id', 'user_cv_id'],
    title: 'CVLanguagePublic'
} as const;

export const CVLanguageUpdateSchema = {
    properties: {
        language: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Language'
        },
        proficiency: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Proficiency'
        },
        certification_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Certification Name'
        },
        certification_score: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Certification Score'
        },
        display_order: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Display Order'
        }
    },
    type: 'object',
    title: 'CVLanguageUpdate'
} as const;

export const CVProjectCreateSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 255,
            title: 'Name'
        },
        description: {
            type: 'string',
            maxLength: 2000,
            title: 'Description'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        project_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Project Url'
        },
        repository_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Repository Url'
        },
        technologies: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Technologies'
        },
        role: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Role'
        },
        company: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Company'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['name', 'description', 'user_cv_id'],
    title: 'CVProjectCreate'
} as const;

export const CVProjectPublicSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 255,
            title: 'Name'
        },
        description: {
            type: 'string',
            maxLength: 2000,
            title: 'Description'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        project_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Project Url'
        },
        repository_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Repository Url'
        },
        technologies: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Technologies'
        },
        role: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Role'
        },
        company: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Company'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['name', 'description', 'id', 'user_cv_id'],
    title: 'CVProjectPublic'
} as const;

export const CVProjectUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        project_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Project Url'
        },
        repository_url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Repository Url'
        },
        technologies: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Technologies'
        },
        role: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Role'
        },
        company: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Company'
        },
        display_order: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Display Order'
        }
    },
    type: 'object',
    title: 'CVProjectUpdate'
} as const;

export const CVSkillCreateSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 100,
            title: 'Name'
        },
        level: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Level'
        },
        category: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Category'
        },
        years_of_experience: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Years Of Experience'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['name', 'user_cv_id'],
    title: 'CVSkillCreate'
} as const;

export const CVSkillPublicSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 100,
            title: 'Name'
        },
        level: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Level'
        },
        category: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Category'
        },
        years_of_experience: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Years Of Experience'
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['name', 'id', 'user_cv_id'],
    title: 'CVSkillPublic'
} as const;

export const CVSkillUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        level: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Level'
        },
        category: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Category'
        },
        years_of_experience: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Years Of Experience'
        },
        display_order: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Display Order'
        }
    },
    type: 'object',
    title: 'CVSkillUpdate'
} as const;

export const CVWorkExperienceCreateSchema = {
    properties: {
        company: {
            type: 'string',
            maxLength: 255,
            title: 'Company'
        },
        position: {
            type: 'string',
            maxLength: 255,
            title: 'Position'
        },
        start_date: {
            type: 'string',
            maxLength: 7,
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        employment_type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Employment Type'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        is_remote: {
            type: 'boolean',
            title: 'Is Remote',
            default: false
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['company', 'position', 'start_date', 'user_cv_id'],
    title: 'CVWorkExperienceCreate'
} as const;

export const CVWorkExperiencePublicSchema = {
    properties: {
        company: {
            type: 'string',
            maxLength: 255,
            title: 'Company'
        },
        position: {
            type: 'string',
            maxLength: 255,
            title: 'Position'
        },
        start_date: {
            type: 'string',
            maxLength: 7,
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        employment_type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Employment Type'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        is_remote: {
            type: 'boolean',
            title: 'Is Remote',
            default: false
        },
        display_order: {
            type: 'integer',
            title: 'Display Order',
            default: 0
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_cv_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Cv Id'
        }
    },
    type: 'object',
    required: ['company', 'position', 'start_date', 'id', 'user_cv_id'],
    title: 'CVWorkExperiencePublic'
} as const;

export const CVWorkExperienceUpdateSchema = {
    properties: {
        company: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Company'
        },
        position: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Position'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        employment_type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Employment Type'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        is_remote: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Remote'
        },
        display_order: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Display Order'
        }
    },
    type: 'object',
    title: 'CVWorkExperienceUpdate'
} as const;

export const GoogleAuthRequestSchema = {
    properties: {
        code: {
            type: 'string',
            title: 'Code',
            description: 'Authorization code from Google OAuth'
        }
    },
    type: 'object',
    required: ['code'],
    title: 'GoogleAuthRequest'
} as const;

export const GoogleAuthResponseSchema = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        token_type: {
            type: 'string',
            title: 'Token Type',
            default: 'bearer'
        },
        user: {
            '$ref': '#/components/schemas/UserPublic'
        }
    },
    type: 'object',
    required: ['access_token', 'user'],
    title: 'GoogleAuthResponse'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const MessageSchema = {
    properties: {
        message: {
            type: 'string',
            title: 'Message'
        }
    },
    type: 'object',
    required: ['message'],
    title: 'Message'
} as const;

export const NewPasswordSchema = {
    properties: {
        token: {
            type: 'string',
            title: 'Token'
        },
        new_password: {
            type: 'string',
            maxLength: 40,
            minLength: 8,
            title: 'New Password'
        }
    },
    type: 'object',
    required: ['token', 'new_password'],
    title: 'NewPassword'
} as const;

export const PrivateUserCreateSchema = {
    properties: {
        email: {
            type: 'string',
            title: 'Email'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        full_name: {
            type: 'string',
            title: 'Full Name'
        },
        is_verified: {
            type: 'boolean',
            title: 'Is Verified',
            default: false
        }
    },
    type: 'object',
    required: ['email', 'password', 'full_name'],
    title: 'PrivateUserCreate'
} as const;

export const RoleCreateSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 50,
            minLength: 1,
            title: 'Name',
            description: 'Role name'
        },
        description: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        }
    },
    type: 'object',
    required: ['name'],
    title: 'RoleCreate'
} as const;

export const RolePublicSchema = {
    properties: {
        name: {
            type: 'string',
            maxLength: 50,
            minLength: 1,
            title: 'Name',
            description: 'Role name'
        },
        description: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['name', 'id'],
    title: 'RolePublic'
} as const;

export const RoleUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 50,
                    minLength: 1
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        is_active: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Active'
        }
    },
    type: 'object',
    title: 'RoleUpdate'
} as const;

export const RolesPublicSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/RolePublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'RolesPublic'
} as const;

export const SiteCreateSchema = {
    properties: {
        domain: {
            type: 'string',
            maxLength: 255,
            title: 'Domain',
            description: 'Backend domain (e.g., api.example.com or localhost:8000)'
        },
        name: {
            type: 'string',
            maxLength: 255,
            title: 'Name',
            description: 'Human-readable site name'
        },
        frontend_domain: {
            type: 'string',
            maxLength: 255,
            title: 'Frontend Domain',
            description: 'Frontend domain for redirects (e.g., example.com or localhost:5173)'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            description: 'Whether the site is active',
            default: true
        },
        is_default: {
            type: 'boolean',
            title: 'Is Default',
            description: 'Whether this is the default site',
            default: false
        },
        settings: {
            anyOf: [
                {
                    additionalProperties: true,
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Settings',
            description: 'Additional site-specific settings'
        }
    },
    type: 'object',
    required: ['domain', 'name', 'frontend_domain'],
    title: 'SiteCreate',
    description: 'Schema for creating a new site'
} as const;

export const SitePublicSchema = {
    properties: {
        domain: {
            type: 'string',
            maxLength: 255,
            title: 'Domain',
            description: 'Backend domain (e.g., api.example.com or localhost:8000)'
        },
        name: {
            type: 'string',
            maxLength: 255,
            title: 'Name',
            description: 'Human-readable site name'
        },
        frontend_domain: {
            type: 'string',
            maxLength: 255,
            title: 'Frontend Domain',
            description: 'Frontend domain for redirects (e.g., example.com or localhost:5173)'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            description: 'Whether the site is active',
            default: true
        },
        is_default: {
            type: 'boolean',
            title: 'Is Default',
            description: 'Whether this is the default site',
            default: false
        },
        settings: {
            anyOf: [
                {
                    additionalProperties: true,
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Settings',
            description: 'Additional site-specific settings'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['domain', 'name', 'frontend_domain', 'id'],
    title: 'SitePublic',
    description: 'Public schema for Site'
} as const;

export const SiteUpdateSchema = {
    properties: {
        domain: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Domain'
        },
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        frontend_domain: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Frontend Domain'
        },
        is_active: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Active'
        },
        is_default: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Default'
        },
        settings: {
            anyOf: [
                {
                    additionalProperties: true,
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Settings'
        }
    },
    type: 'object',
    title: 'SiteUpdate',
    description: 'Schema for updating a site'
} as const;

export const SitesPublicSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/SitePublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'SitesPublic',
    description: 'Schema for list of sites'
} as const;

export const TokenSchema = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        token_type: {
            type: 'string',
            title: 'Token Type',
            default: 'bearer'
        }
    },
    type: 'object',
    required: ['access_token'],
    title: 'Token'
} as const;

export const UpdatePasswordSchema = {
    properties: {
        current_password: {
            type: 'string',
            maxLength: 40,
            minLength: 8,
            title: 'Current Password'
        },
        new_password: {
            type: 'string',
            maxLength: 40,
            minLength: 8,
            title: 'New Password'
        }
    },
    type: 'object',
    required: ['current_password', 'new_password'],
    title: 'UpdatePassword'
} as const;

export const UserCVCreateSchema = {
    properties: {
        professional_summary: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 2000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Professional Summary'
        },
        linkedin_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Linkedin Url'
        },
        github_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Github Url'
        },
        portfolio_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Portfolio Url'
        },
        user_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['user_id'],
    title: 'UserCVCreate'
} as const;

export const UserCVFullSchema = {
    properties: {
        professional_summary: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 2000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Professional Summary'
        },
        linkedin_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Linkedin Url'
        },
        github_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Github Url'
        },
        portfolio_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Portfolio Url'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Id'
        },
        cv_files: {
            items: {
                '$ref': '#/components/schemas/CVFilePublic'
            },
            type: 'array',
            title: 'Cv Files',
            default: []
        },
        education: {
            items: {
                '$ref': '#/components/schemas/CVEducationPublic'
            },
            type: 'array',
            title: 'Education',
            default: []
        },
        work_experience: {
            items: {
                '$ref': '#/components/schemas/CVWorkExperiencePublic'
            },
            type: 'array',
            title: 'Work Experience',
            default: []
        },
        skills: {
            items: {
                '$ref': '#/components/schemas/CVSkillPublic'
            },
            type: 'array',
            title: 'Skills',
            default: []
        },
        certifications: {
            items: {
                '$ref': '#/components/schemas/CVCertificationPublic'
            },
            type: 'array',
            title: 'Certifications',
            default: []
        },
        languages: {
            items: {
                '$ref': '#/components/schemas/CVLanguagePublic'
            },
            type: 'array',
            title: 'Languages',
            default: []
        },
        projects: {
            items: {
                '$ref': '#/components/schemas/CVProjectPublic'
            },
            type: 'array',
            title: 'Projects',
            default: []
        }
    },
    type: 'object',
    required: ['id', 'user_id'],
    title: 'UserCVFull'
} as const;

export const UserCVPublicSchema = {
    properties: {
        professional_summary: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 2000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Professional Summary'
        },
        linkedin_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Linkedin Url'
        },
        github_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Github Url'
        },
        portfolio_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Portfolio Url'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['id', 'user_id'],
    title: 'UserCVPublic'
} as const;

export const UserCVUpdateSchema = {
    properties: {
        professional_summary: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 2000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Professional Summary'
        },
        linkedin_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Linkedin Url'
        },
        github_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Github Url'
        },
        portfolio_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Portfolio Url'
        }
    },
    type: 'object',
    title: 'UserCVUpdate'
} as const;

export const UserCVsPublicSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/UserCVPublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'UserCVsPublic'
} as const;

export const UserCreateSchema = {
    properties: {
        email: {
            type: 'string',
            maxLength: 255,
            format: 'email',
            title: 'Email'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        full_name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Full Name'
        },
        password: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 40,
                    minLength: 8
                },
                {
                    type: 'null'
                }
            ],
            title: 'Password'
        },
        is_superuser: {
            type: 'boolean',
            title: 'Is Superuser',
            default: false
        }
    },
    type: 'object',
    required: ['email'],
    title: 'UserCreate'
} as const;

export const UserProfileCreateSchema = {
    properties: {
        phone: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone'
        },
        address: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        bio: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 1000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Bio'
        },
        avatar_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Avatar Url'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        },
        city: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        postal_code: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Postal Code'
        },
        user_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['user_id'],
    title: 'UserProfileCreate'
} as const;

export const UserProfilePublicSchema = {
    properties: {
        phone: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone'
        },
        address: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        bio: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 1000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Bio'
        },
        avatar_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Avatar Url'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        },
        city: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        postal_code: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Postal Code'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Id'
        }
    },
    type: 'object',
    required: ['id', 'user_id'],
    title: 'UserProfilePublic'
} as const;

export const UserProfileUpdateSchema = {
    properties: {
        phone: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone'
        },
        address: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        bio: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 1000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Bio'
        },
        avatar_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Avatar Url'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        },
        city: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        postal_code: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Postal Code'
        }
    },
    type: 'object',
    title: 'UserProfileUpdate'
} as const;

export const UserProfileWithSitesSchema = {
    properties: {
        phone: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone'
        },
        address: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        bio: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 1000
                },
                {
                    type: 'null'
                }
            ],
            title: 'Bio'
        },
        avatar_url: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 500
                },
                {
                    type: 'null'
                }
            ],
            title: 'Avatar Url'
        },
        date_of_birth: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Of Birth'
        },
        city: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        country: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 100
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        postal_code: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 20
                },
                {
                    type: 'null'
                }
            ],
            title: 'Postal Code'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        user_id: {
            type: 'string',
            format: 'uuid',
            title: 'User Id'
        },
        site_ids: {
            items: {
                type: 'string',
                format: 'uuid'
            },
            type: 'array',
            title: 'Site Ids',
            description: 'List of associated site IDs'
        }
    },
    type: 'object',
    required: ['id', 'user_id'],
    title: 'UserProfileWithSites'
} as const;

export const UserProfilesPublicSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/UserProfilePublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'UserProfilesPublic'
} as const;

export const UserPublicSchema = {
    properties: {
        email: {
            type: 'string',
            maxLength: 255,
            format: 'email',
            title: 'Email'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        full_name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Full Name'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        is_superuser: {
            type: 'boolean',
            title: 'Is Superuser'
        }
    },
    type: 'object',
    required: ['email', 'id', 'is_superuser'],
    title: 'UserPublic'
} as const;

export const UserRegisterSchema = {
    properties: {
        email: {
            type: 'string',
            maxLength: 255,
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            maxLength: 40,
            minLength: 8,
            title: 'Password'
        },
        full_name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Full Name'
        }
    },
    type: 'object',
    required: ['email', 'password'],
    title: 'UserRegister'
} as const;

export const UserUpdateSchema = {
    properties: {
        email: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255,
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        is_active: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Active'
        },
        full_name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Full Name'
        }
    },
    type: 'object',
    title: 'UserUpdate'
} as const;

export const UserUpdateMeSchema = {
    properties: {
        full_name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255
                },
                {
                    type: 'null'
                }
            ],
            title: 'Full Name'
        },
        email: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 255,
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        }
    },
    type: 'object',
    title: 'UserUpdateMe'
} as const;

export const UsersPublicSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/UserPublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'UsersPublic'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;